import { Inter } from "next/font/google";
import Head from "next/head";
import { useState, useEffect, useMemo } from "react";
import axios from "axios";
import { Image } from "@chakra-ui/react";
import MapComponent from "./components/MapComponent";

import { Heading, Select, Box, Stack } from "@chakra-ui/react";

import Navbar from "./components/Navbar";

import { getPmus1, getPmus2 } from "@/data/phasorData";
import FullScreenComponent from "./components/FullScreenComponent";

const inter = Inter({ subsets: ["latin"] });

interface PMUDataProps {
  university: string;
  utcDate: string;
  ppaModule: number;
  ppaAngle: number;
  ppaStatusFlags: number;
  coordinates: {
    latitude: number;
    longitude: number;
  };
  phasorModule: number;
  phasorAngle: number;
  statusFlags: number;
  base: number;
}

export default function Home() {
  const [data, setData] = useState<PMUDataProps[]>([]);
  const [option, setOption] = useState("ufpa");

  const handleOption = (e: React.ChangeEvent<HTMLSelectElement>) => {
    setOption(e.target.value);
  };

  const pmus1 = useMemo(() => [...getPmus1()], []);
  const pmus2 = useMemo(() => [...getPmus2()], []);

  const baseUrl = "/api/historian/timeseriesdata/read/current";

  let phasorModuleAngleStatusFlags: number[] = [];
  let phasorModuleAngleStatusFlags2: number[] = [];

  pmus1.forEach((university) => {
    phasorModuleAngleStatusFlags.push(
      university.ppaModule,
      university.ppaAngle,
      university.ppaStatusFlags
    );
  });

  pmus2.forEach((university) => {
    phasorModuleAngleStatusFlags2.push(
      university.ppaModule,
      university.ppaAngle,
      university.ppaStatusFlags
    );
  });

  // Construct the final API_URL using the accumulated values
  const API_URL = `${baseUrl}/${phasorModuleAngleStatusFlags.join(",")}/json`;
  const API_URL2 = `${baseUrl}/${phasorModuleAngleStatusFlags2.join(",")}/json`;

  useEffect(() => {
    const fetchData = async () => {
      try {
        const res = await axios.get(API_URL);
        const jsonData = res.data.TimeSeriesDataPoints;

        const now = new Date();
        const tenSecondsAgo = new Date(now.getTime() - 10000); // 10000 ms = 10 seconds
        const utcTime = tenSecondsAgo.toISOString(); // format as ISO string

        let i = 0;
        pmus1.forEach((university) => {
          university.phasorModule = jsonData[i].Value;
          university.phasorAngle = jsonData[i + 1].Value;
          university.statusFlags = jsonData[i + 2].Value;
          university.utcDate = jsonData[i].Time;
          i += 3;
        });

        const voltage = pmus1.filter(
          (university) =>
            (university.statusFlags === 64 || university.statusFlags === 0) &&
            new Date(university.utcDate) >= new Date(utcTime)
        );

        const res2 = await axios.get(API_URL2);
        const jsonData2 = res2.data.TimeSeriesDataPoints;

        i = 0;
        pmus2.forEach((university) => {
          university.phasorModule = jsonData2[i].Value;
          university.phasorAngle = jsonData2[i + 1].Value;
          university.statusFlags = jsonData2[i + 2].Value;
          university.utcDate = jsonData2[i].Time;
          i += 3;
        });

        const voltage2 = pmus2.filter(
          (university) =>
            (university.statusFlags === 64 || university.statusFlags === 0) &&
            new Date(university.utcDate) > new Date(utcTime)
        );

        const allPmus = voltage.concat(voltage2);
        setData(allPmus);
      } catch (error) {
        console.error(error);
      }
    };

    const interval = setInterval(fetchData, 1000);

    return () => clearInterval(interval);
  }, [API_URL, API_URL2, pmus1, pmus2]);

  return (
    <>
      <Head>
        <title>MedFasee BT</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div style={{ position: "relative" }}>
          <Navbar />
          <MapComponent />
          <Box
            borderColor="blue"
            position="absolute"
            top="100px"
            left="20px"
            zIndex={1}
            cursor="pointer"
          >
            <Heading size="lg">Sistema Interligado Nacional</Heading>
            <Heading size="md">Fasores de SequÃªncia Positiva</Heading>
            {data.length > 0 ? (
              <FullScreenComponent
                data={data}
                option={option}
                handleOption={handleOption}
              />
            ) : (
              <p>Carregando...</p>
            )}
            <Select
              placeholder="Select"
              onChange={handleOption}
              value={option}
              bg="tomato"
              borderColor="tomato"
              color="white"
              width="200px"
            >
              {data.map((university) => {
                return (
                  <option
                    value={university.university}
                    key={university.university}
                  >
                    {university.university}
                  </option>
                );
              })}
            </Select>
          </Box>
          <Stack
            direction="row"
            borderColor="blue"
            position="absolute"
            bottom="20px"
            left="20px"
            zIndex={2}
          >
            <Image
              boxSize="100px"
              objectFit="cover"
              src="/images/ufsc.png"
              alt="UFSC"
              p="10px"
              border="1px solid white"
              bg='white'
              borderRadius={10}
              />
            <Image
              boxSize="100px"
              objectFit="cover"
              src="/images/labplan.png"
              alt="LabPlan"
              p="10px"
              border="1px solid white"
              bg='white'
              borderRadius={10}
            />
            <Image
              boxSize="100px"
              objectFit="cover"
              src="/images/inesc_brasil.png"
              alt="Inesc Brasil"
              p="10px"
              border="1px solid white"
              bg='white'
              borderRadius={10}
            />
            <Image
              boxSize="100px"
              objectFit="cover"
              src="/images/feesc.png"
              alt="Feesc"
              p="10px"
              border="1px solid white"
              bg='white'
              borderRadius={10}
            />
            <Image
              boxSize="100px"
              objectFit="cover"
              src="/images/ons.jpeg"
              alt="ONS"
              p="10px"
              border="1px solid white"
              bg='white'
              borderRadius={10}
            />
          </Stack>
        </div>
      </main>
    </>
  );
}
